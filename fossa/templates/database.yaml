---
apiVersion: v1
kind: Service
metadata:
  name: database
  namespace: fossa
  labels:
    app: fossa
    tier: database
    deployment: production
    role: master
spec:
  type: ClusterIP
  ports:
  - name: postgres
    port: 5432
    protocol: TCP
    targetPort: postgres
  selector:
    app: fossa
    tier: database
    deployment: production
    role: master
  sessionAffinity: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: database
  namespace: fossa
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: fossa
      tier: database
      deployment: production
      role: master
  serviceName: database
  template:
    metadata:
      labels:
        app: fossa
        tier: database
        deployment: production
        role: master
    spec:
      volumes:   
      - name: postgres-data
        hostPath:
          path: /opt/fossa/database 
      containers:
      - name: postgresql
        image: quay.io/fossa/db:v1
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - fossa
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - fossa
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
        ports:
        - containerPort: 5432
          name: postgres
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data
          readOnly: false
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
      - name: quay.io
  updateStrategy:
    type: OnDelete
